:root {
  --boxColor: #0ff7;
  --rotateSpeed: 30s;
}

body {
  background-color: #000;
  font-size: 75px;
  min-height: 100vh; 
  display: flex;
  justify-content: center; 
  align-items: center; 
  perspective: 10em;
  perspective-origin: 50% calc(50% - 2em);
}

@keyframes sceneRotate {
  to { transform: rotateY(360deg); }
}

.scene {
  position: relative;
  transform-style: preserve-3d;
  animation: sceneRotate var(--rotateSpeed) infinite linear;
}

.ball {
  width: 1em;
  height: 1em;
  border-radius: 50%;
  background-color: lightblue;
  position: absolute;
  left: -.5em;
  bottom: 1em;
  background-image: radial-gradient(circle at top, lightblue, #000);
  animation: sceneRotate var(--rotateSpeed) infinite linear reverse;
}

.ballshadow {
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: radial-gradient(#0007, #0000 50%);
}

.cube {
  width: 2em;
  height: 2em;
  position: absolute;
  top: 0;
  left: 0;
  transform-style: preserve-3d; /* This is important for nesting 3D transformed elements */
}

.cube .front, .cube .back, .cube .left, .cube .right, .cube .top, .cube .bottom {
  position: absolute;
  width: 100%;
  height: 100%;
  background: var(--boxColor);
  box-shadow: 0 0 0.5em #000a inset;
}

.cube .front {
  transform: translateZ(1em);
}

.cube .back {
  transform: rotateY(180deg) translateZ(1em);
}

.cube .right {
  transform: rotateY(90deg) translateZ(1em);
}

.cube .left {
  transform: rotateY(-90deg) translateZ(1em);
}

.cube .top {
  transform: rotateX(90deg) translateZ(1em); /* You might want to add this */
}

.cube .bottom {
  transform: rotateX(-90deg) translateZ(1em);
}


.floor {
  position: absolute;
  transform: translate(-50%, -50%) rotateX(90deg);
  top: 1em;
  width: 15em;
  height: 15em;
  background-image: radial-gradient(#0000, #000), repeating-conic-gradient(from 45deg, #111 0deg 90deg, #222 90deg 180deg);
  background-size: 100%, 1em 1em; 
}